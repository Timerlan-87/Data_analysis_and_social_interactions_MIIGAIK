def dijkstra(graph, start):
    """
    Реализация алгоритма Дейкстры для поиска кратчайших путей.
    Граф задаётся матрицей смежности.

    """
    # Количество вершин в графе
    n = len(graph)
    # Список для отслеживания посещённых вершин. Изначально все вершины непосещены.
    visited = [False] * n
    # Список для хранения кратчайших расстояний от начальной вершины до каждой другой.
    distances = [float('inf')] * n
    distances[start] = 0  # Расстояние от начальной вершины до себя равно 0

    for _ in range(n):
        # Находим непосещённую вершину с минимальным расстоянием
        min_dist = float('inf')
        u = -1  # Индекс вершины с минимальным расстоянием

        # Проходим по всем вершинам, чтобы найти непосещённую с минимальным расстоянием
        for i in range(n):
            if not visited[i] and distances[i] < min_dist:
                min_dist = distances[i]
                u = i  # Найдена новая вершина с минимальным расстоянием

        # Если u == -1, значит, среди непосещённых вершин не осталось
        # В этом случае можно прервать цикл.
        if u == -1:
            break

        # Помечаем выбранную вершину как посещённую
        visited[u] = True

        # Обновляем расстояния до соседей выбранной вершины u
        for v in range(n):
            # Проверяем, существует ли ребро из u в v (graph[u][v] > 0)
            # и не посещена ли вершина v
            if graph[u][v] > 0 and not visited[v]:
                # Вычисляем новое возможное кратчайшее расстояние до v через вершину u
                new_dist = distances[u] + graph[u][v]
                # Если новое расстояние короче текущего кратчайшего расстояния до v, обновляем расстояние до v.
                if new_dist < distances[v]:
                    distances[v] = new_dist
    return distances

# Матрица смежности, представляющая граф:
graph = [
    [0, 2, 0, 0],
    [2, 0, 3, 1],
    [0, 3, 0, 1],
    [0, 1, 1, 0]
]

start_vertex = 0  # Задаем начальную вершину (индекс 0)
# Вызываем функцию Дейкстры для поиска кратчайших расстояний
result = dijkstra(graph, start_vertex)
print(f"Кратчайшие расстояния от вершины {start_vertex}: {result}")